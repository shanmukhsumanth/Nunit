# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
        
#       - name: Setup .NET
#         uses: actions/setup-dotnet@v1
#         with:
#          dotnet-version: 5.0.x
      - name: Setup .NET Core SDK ${{ env.VERSION }}
        uses: actions/setup-dotnet@v1.7.2
         
      - name: Restore NuGet packages
        working-directory: .
        run: nuget restore unit-testing-using-nunit.sln
        
      #- name: Setup MSBuild
       # uses: microsoft/setup-msbuild@v1
      - name: dowload sonarscanner
        working-directory: /home/runner/work/Nunit/Nunit/
        shell: pwsh
        run: |
             New-Item -Path /home/runner/work/Nunit/Nunit/sonar/scanner -ItemType Directory
             Invoke-RestMethod -Uri 'https://github.com/SonarSource/sonar-scanner-msbuild/releases/download/4.10.0.19059/sonar-scanner-msbuild-4.10.0.19059-net46.zip' -OutFile '/home/runner/work/Nunit/Nunit/sonar/scanner/sonar-scanner-msbuild-4.10.0.19059-net46.zip'
             expand-archive -path '/home/runner/work/Nunit/Nunit/sonar/scanner/sonar-scanner-msbuild-4.10.0.19059-net46.zip' -destinationpath '/home/runner/work/Nunit/Nunit/sonar/scanner'    

       
     
             
      - name: Begin sonar
        shell: pwsh
        run: |
             /home/runner/work/Nunit/Nunit/sonar/scanner/SonarScanner.MSBuild.exe begin /k:"test" /d:sonar.host.url="http://18.223.255.187:9000/" /d:sonar.login="468e915bea1f082d467573a002519263bc54598d" /d:sonar.cs.nunit.reportsPaths="reports/nunit_results.xml"
             dotnet msbuild /target:Rebuild unit-testing-using-nunit.sln
             
             
      - name: install nunit consoller
        working-directory: /home/runner/work/Nunit/Nunit/
        run: dotnet add package NUnit.ConsoleRunner --version 3.12.0
             
      - name: add package Nunit3TestAdapter
        run: dotnet add unit-testing-using-nunit1.csproj package Nunit3TestAdapter
      
    
      
      - name: add package NUnit
        run: dotnet add unit-testing-using-nunit1.csproj package NUnit
    
      - name: add test logger package 
        run: dotnet add unit-testing-using-nunit1.csproj package NunitXml.TestLogger --version 3.0.107
        
      - name: run test
        run: dotnet test unit-testing-using-nunit.sln ---logger:"trx;LogFileName=testresult.xml" format=nunit2 --framework=net-4.5 --dispose-runners --workers=10
        # run: dotnet test unit-testing-using-nunit.sln --logger:"trx;LogFileName=testresult.xml"
         
       
      - name: end analysis
        run:  /home/runner/work/Nunit/Nunit/sonar/scanner/SonarScanner.MSBuild.exe end /d:sonar.login="468e915bea1f082d467573a002519263bc54598d"
       
