name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    #- name: Restore NuGet packages
     # working-directory: .
      #run: nuget restore unit-testing-using-nunit.sln
      
    - name: NUnit
      run: dotnet new nunit
      
    #- name: Restore dependencies 
     # working-directory: ./core/getting-started/unit-testing-using-nunit/unit-testing-using-nunit.sln
      #run: dotnet restore
    - name: Build
      working-directory: ./
      run: dotnet build  unit-testing-using-nunit.csproj
      
    - name: add package Microsoft.NET.Test.Sdk
      run: dotnet add unit-testing-using-nunit.csproj package Microsoft.NET.Test.Sdk --version 16.10.0 
      
    - name: add package Nunit3TestAdapter
      run: dotnet add unit-testing-using-nunit.csproj package Nunit3TestAdapter
      
    - name: add package NUnit
      run: dotnet add unit-testing-using-nunit.csproj package NUnit
      
    - name: Test
      run: dotnet test unit-testing-using-nunit.sln /p:CollectCoverage=true /p:DeterministicSourcePaths=true /p:IncludeTestAssembly=true /p:CoverletOutputFormat=opencover%2ccobertura /p:CoverletOutput=../target/reports/coverage/
      
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@4.8.9
      with:
        reports: 'src\target\reports\coverage\coverage.opencover.xml'
        targetdir: 'src\target\reports\coverage'
        reporttypes: 'HtmlInline_AzurePipelines;Cobertura;Badges'
        sourcedirs: 'unit-testing-using-nunit.csproj'
        assemblyfilters: '-xunit*'
        
    - name: 'Publish code coverage results'
      uses: actions/upload-artifact@v2.2.3
      with:
        name: CoverageReport
        path: src/target/reports/coverage
